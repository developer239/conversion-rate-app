name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'

  schedule:
    #
    # Note that this is something that I would discuss with the team and would decided based
    # on the actual project requirements. If 1-minute delay is acceptable, then the performance benefits
    # of static site generation are worth it.

    # Run at 2:31 PM CET (Prague time) on weekdays (Monday-Friday)
    # CET is UTC+1, so 2:31 PM CET = 1:31 PM UTC
    - cron: '33 11 * * 1-5'

  workflow_dispatch:
    inputs:
      deploy:
        description: 'Should deploy'
        required: false
        default: 'false'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Cache node_modules
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Build
        run: yarn build

      - name: Cache build outputs
        uses: actions/cache@v4
        with:
          path: |
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel deploy --prod --token=$VERCEL_TOKEN
